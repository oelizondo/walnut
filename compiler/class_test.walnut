program test;

class ClassTest {
  attributes {
    int parent;
  }

  methods {
    func initializer(int a, int b, int c) {
      int a;
    }
    func doSomething() {
      int cosa = 12434;
    }

    func parent_function(string a, string c) : string {
      return a;
    }
  }
}

class Test2 extends ClassTest {
  attributes {
    int a;
    float b;
  }

  methods {
    func initializer(int a, float b) {
      boolean x = 10 - 15 * 12 < 14 + 14 * 45 ^ 34;
    }
    func doSomething(int a, float b) : string {
      int a = 5 + 5;
      if(a < 5) {

      }
      else {

      }
      return "string";
    }
    func somethingElse(int this, int that) : int {
      int b = 5 + 10;
      return b*5+2;
    }

  }
}

globals {
  int as = 1002;
  Test2 obj = Test2.new(3,2.2);
  ClassTest obj2 = ClassTest.new(1,2,3);
  as = obj.somethingElse(as,3);
}

func doThis(int param1, string param2, float param3) : int {
  float a;
  a = param1 + param3;

  return obj.somethingElse(1,2);
}

func func2(int param1, int param2, int param3) : string {
  return "this";
}

func func3(int param2) {
  5*5;
}

run
  string c;
  c = func2(1,2,3) + func2(2,2,3) + func2(2,3,3);
  c = obj.parent_function("a","b") + obj2.parent_function("b","3") + obj.doSomething(doThis(1,"string",5/3),5*3/12);
end
